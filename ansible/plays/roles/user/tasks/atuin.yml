- name: Check if atuin is installed
  shell: atuin -V
  register: autin_version
  changed_when: autin_version.rc != 0
  failed_when: autin_version.rc not in (0, 127)

- block:
    - name: Create temporary file for install script
      tempfile:
        state: file
        suffix: temp
      register: temp_install_file

    - name: Downloading atuin install script
      get_url:
        url: "{{ atuin.url }}"
        dest: "{{ temp_install_file.path }}"
        force: true # overwrite tempfile

    - name: Run install script
      shell: "bash {{ temp_install_file.path }}"

  when: autin_version.changed

- name: Login [{{ atuin.username }}]
  shell: "atuin login -u {{ atuin.username }} -p {{ atuin.password }} -k '{{ atuin.key }}'"
  register: login
  changed_when: '"You are already logged in!" not in login.stdout'

- name: Sync
  shell: "atuin sync"
  when: login.changed

- name: Set atuin filenames
  set_fact:
    config_dir: .config/atuin/config.toml

- name: Set auto-sync
  lineinfile:
    path: "{{ (ansible_user_dir, config_dir) | path_join }}"
    search_string: 'auto_sync'
    line: 'auto_sync = true'

- name: Set update-check
  lineinfile:
    path: "{{ (ansible_user_dir, config_dir) | path_join }}"
    search_string: 'update_check'
    line: 'update_check = true'

- name: Set filter mode for shell up-key binding
  lineinfile:
    path: "{{ (ansible_user_dir, config_dir) | path_join }}"
    search_string: 'filter_mode_shell_up_key_binding'
    line: 'filter_mode_shell_up_key_binding = "directory"'
