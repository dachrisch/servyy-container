# Docker Setup
- name: Remove ancient docker compose
  apt: name=docker-compose state=absent
  become_user: root
  tags:
    - user.docker.install

- name: Include docker remote repo
  include_tasks: includes/from_remote_repo.yml
  vars:
    repo_name: "docker"
    key_url: "https://download.docker.com/linux/ubuntu/gpg"
    deb_url: "https://download.docker.com/linux/ubuntu"
    repository: "{{ ansible_distribution_release }} stable"
    packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    recheck: true
  tags:
    - user.docker.install

- name: adding existing user '{{ create_user }}' to group docker
  user:
    name: '{{ create_user }}'
    groups: docker
    append: yes
  become_user: root
  register: group_added
  tags:
    - user.docker.install.add_group

- name: Reboot to apply changes
  reboot:
    msg: Reboot to make docker user available
  become_user: root
  when: group_added.changed
  tags:
    - user.docker.install.reboot

- name: Create external network
  docker_network:
    name: proxy
  tags:
    - user.docker.create.network

# https://stackoverflow.com/questions/43689271/wheres-dockers-daemon-json-missing
- name: Configure docker daemon logging
  become_user: root
  json_patch:
    src: '/etc/docker/daemon.json'
    create: true
    operations:
      - op: add
        path: 'log-driver'
        value: 'local'

- name: Check if mount point "{{ extension_drive.path }}" exists
  stat:
    path: "{{ extension_drive.path }}"
  register: mount_point

- block:
    - name: Configure docker daemon data root
      become_user: root
      json_patch:
        src: '/etc/docker/daemon.json'
        create: true
        pretty: true
        operations:
          - op: add
            path: 'data-root'
            value: "{{ extension_drive.path }}/docker"
      register: root_added

    - name: Restart Docker to apply changes
      service:
        name: docker
        state: restarted
      when: group_added.changed
  when: mount_point.stat.exists
