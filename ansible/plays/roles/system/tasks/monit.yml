- name: Monitor SSHD
  file:
    src: /etc/monit/conf-available/openssh-server
    dest: /etc/monit/conf-enabled/openssh-server
    state: link

- name: Setup logging
  template:
    src: monit.log.j2
    dest: /etc/monit/conf.d/log
    mode: 0640

- name: Setup http (for status)
  template:
    src: monit.status.j2
    dest: /etc/monit/conf.d/status
    mode: 0640

- name: Setup alert email
  template:
    src: monit.alert.j2
    dest: /etc/monit/conf.d/alert
    mode: 0640

- name: Setup systems check
  template:
    src: monit.system.check.j2
    dest: /etc/monit/conf.d/system-check
    mode: 0640

- name: Setup storagebox check
  template:
    src: monit.storagebox.check.j2
    dest: /etc/monit/conf.d/storagebox-check
    mode: 0640

- block:
    - name: Create scripts dir
      file:
        path: /etc/monit/scripts
        state: directory
        owner: root
        group: root

    - name: Create docker container check script
      template:
        src: check_docker_compose.sh.j2
        dest: /etc/monit/scripts/check_docker_compose-{{ item.dir }}.sh
        mode: 0750
      vars:
        container_names: "{{ lookup('file', (docker.local_dir, item.dir, 'docker-compose.yml') | path_join ) | from_yaml | json_query('services.*.container_name') | map('split', '.') | flatten | reject('contains', '${') }}"
        dir_name: "{{ item.dir }}"
      with_items:
        - "{{ docker.services }}"
      tags:
        - system.monit.script
        - system.monit.script.create

    - name: Setup container check
      template:
        src: monit.container.check.j2
        dest: /etc/monit/conf.d/container-check-{{ item.dir }}
        mode: 0640
      vars:
        service: "{{ item }}"
      when: not ('manual' in item)
      with_items:
        - "{{ docker.services }}"
      tags:
        - system.monit.script
        - system.monit.script.setup

    - name: Remove container check for manual jobs
      file:
        path: /etc/monit/conf.d/container-check-{{ item.dir }}
        state: absent
      when: ('manual' in item)
      with_items:
        - "{{ docker.services }}"
      tags:
        - system.monit.script
        - system.monit.script.remove
  when: with_containers | default(false)

- name: Restart monit
  service:
    name: monit
    state: restarted

- name: Run monit status
  command: monit status
  register: monit_status
  ignore_errors: true

- name: Assert monit status is callable
  assert:
    that:
      - monit_status.rc == 0
    fail_msg: "monit status command failed"
    success_msg: "monit status command succeeded"

- name: Check if any events where postponed (maybe mailserver error)
  find:
    paths: '/var/lib/monit/events/'
  register: filesFound

- fail:
    msg: 'Some events where postponed'
  when: filesFound.matched > 0
