# Docker Services
- name: Ensures {{ remote_user_systemd }} dir exists
  file:
    path: "{{ remote_user_systemd }}"
    state: directory

- name: Stop docker services
  systemd:
    scope: user
    name: "{{ 'docker-' + item.dir | lower }}"
    state: stopped
  with_items:
    - "{{ docker.services }}"

- name: Create docker systemctl services
  template:
    src: docker.service.j2
    dest: "{{ (remote_user_systemd, 'docker-' + item.dir | lower) | path_join }}.service"
  vars:
    service: "{{item}}"
  with_items:
    - "{{ docker.services }}"

- name: Start docker services
  systemd:
    scope: user
    name: "{{ 'docker-' + item.dir | lower }}"
    state: started
    enabled: yes
  with_items:
    - "{{ docker.services }}"

- name: Create Index service
  template:
    src: oneshot.service.j2
    dest: "{{ (remote_user_systemd, 'docker-photo-index') | path_join }}.service"
  vars:
    service: {
      'name': 'Docker Compose - Photo Index',
      'depends': 'docker-photoprism',
      'command': "{{ (docker.remote_dir, 'scripts/index-photos.sh') | path_join }}"
    }

- name: Create Photo Index timer
  template:
    src: oneshot.timer.j2
    dest: "{{ (remote_user_systemd, 'docker-photo-index') | path_join }}.timer"
  vars:
    timer: {
      'name': 'Trigger Docker Compose - Photo Index Every two Hours',
      'schedule': '00/2:30'
    }


- name: Start Photo Index timer
  systemd:
    scope: user
    name: docker-photo-index.timer
    state: started
    enabled: yes